// Generated by CoffeeScript 1.8.0
(function() {
  var Foo, Maybe, foo_maybe, foo_result, null_maybe, null_result;

  Maybe = (function() {
    function Maybe(val) {
      this.val = val;
    }

    Maybe.prototype.and_then = function(func) {
      if (this.val) {
        return func(this.val);
      } else {
        return new Maybe(this.val);
      }
    };

    return Maybe;

  })();

  Foo = (function() {
    function Foo() {
      this.thing = "a";
    }

    Foo.prototype.foo = function() {
      this.thing += " and foo";
      return this;
    };

    Foo.prototype.bar = function() {
      this.thing += " and bar";
      return this;
    };

    Foo.prototype.baz = function() {
      this.thing += " and baz";
      return this;
    };

    Foo.prototype.toString = function() {
      return "Contains " + this.thing;
    };

    return Foo;

  })();

  null_maybe = new Maybe(null);

  foo_maybe = new Maybe(new Foo());

  null_result = (_ref2 = (_ref2 = (_ref2 = null_maybe, _ref2).and_then(function(_ref1){return new (_ref2).constructor(_ref1.foo());}), _ref2).and_then(function(_ref1){return new (_ref2).constructor(_ref1.bar());}), _ref2).and_then(function(_ref1){return new (_ref2).constructor(_ref1.baz);}).val;

  foo_result = (_ref2 = (_ref2 = (_ref2 = foo_maybe, _ref2).and_then(function(_ref1){return new (_ref2).constructor(_ref1.foo());}), _ref2).and_then(function(_ref1){return new (_ref2).constructor(_ref1.bar());}), _ref2).and_then(function(_ref1){return new (_ref2).constructor(_ref1.baz());}).val;

  console.log("null res: " + null_result);

  console.log("foo res: " + foo_result);

}).call(this);
